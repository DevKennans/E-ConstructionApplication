@model EConstructionApp.WebUI.Areas.Admin.Models.CategoryListViewModel
@{
    ViewData["Title"] = "Category List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container mt-5">

    <a href="@Url.Action("AddCategory", "Category", new { area = "Admin" })" class="btn btn-success mb-2">
        <i class="fas fa-plus"></i> Add Category
    </a>

    @if (TempData["ErrorMessageFromCategory"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show text-center" role="alert">
            @TempData["ErrorMessageFromCategory"]
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }
    @if (TempData["SuccessMessageFromCategory"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show text-center" role="alert">
            @TempData["SuccessMessageFromCategory"]
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }
    @if (Model?.Categories != null && Model.Categories.Any())
    {
        <div class="table-responsive">
            <table class="table table-striped table-hover">
                <thead class="thead-dark">
                    <tr>
                        <th>Category Name</th>
                        <th>Created Date</th>
                        <th>Modified Date</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var category in Model.Categories)
                    {
                        <tr>
                            <td>@category.Name</td>
                            <td>@category.InsertedDate.ToString("yyyy-MM-dd")</td>
                            <td>
                                @if (category.ModifiedDate.HasValue)
                                {
                                    @category.ModifiedDate.Value.ToString("yyyy-MM-dd")
                                }
                                else
                                {
                                    <span class="text-muted">There is no change at the moment</span>
                                }
                            </td>
                            <td>
                                <button class="btn btn-warning btn-sm me-2 edit-btn"
                                        data-bs-toggle="modal"
                                        data-bs-target="#editCategoryModal"
                                        data-id="@category.Id"
                                        data-name="@category.Name">
                                    ✏ Edit
                                </button>
                                <form id="deleteForm_@category.Id" method="post" action="@Url.Action("DeleteCategory", "Category")" style="display:inline;">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="categoryId" value="@category.Id" />
                                    <button type="button" class="btn btn-danger btn-sm delete-btn"
                                            data-id="@category.Id">
                                        🗑 Delete
                                    </button>
                                </form>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        @if (Model.TotalPages > 1)
        {
            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center mt-4">
                    <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                        <a class="page-link rounded-pill shadow-sm" href="@Url.Action("GetCategories", new { page = Model.CurrentPage - 1, size = 5 })">
                            « Previous
                        </a>
                    </li>
                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                            <a class="page-link rounded-pill shadow-sm @(Model.CurrentPage == i ? "bg-primary text-white" : "")"
                               href="@Url.Action("GetCategories", new { page = i, size = 5 })">
                                @i
                            </a>
                        </li>
                    }
                    <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                        <a class="page-link rounded-pill shadow-sm" href="@Url.Action("GetCategories", new { page = Model.CurrentPage + 1, size = 5 })">
                            Next »
                        </a>
                    </li>
                </ul>
            </nav>

        }
    }
    else
    {
        <p class="text-center mt-3">No categories found.</p>
    }
</div>
<div class="modal fade" id="editCategoryModal" tabindex="-1" aria-labelledby="editCategoryModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editCategoryModalLabel">Edit Category</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editCategoryForm" method="post" action="@Url.Action("EditCategory", "Category")">
                    <input type="hidden" id="categoryId" name="Id" />
                    <div class="form-group">
                        <label for="categoryName">Category Name</label>
                        <input type="text" id="categoryName" name="Name" class="form-control" required minlength="2" maxlength="250" />
                    </div>
                    <div class="form-actions mt-3">
                        <button type="submit" class="btn btn-primary">Update Category</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        setTimeout(() => {
            let alerts = document.querySelectorAll('.alert');
            alerts.forEach(alert => {
                alert.classList.remove("show");
                alert.classList.add("fade");
                setTimeout(() => alert.remove(), 500);
            });
        }, 3000);
        const editButtons = document.querySelectorAll('.edit-btn');
        const categoryIdField = document.getElementById('categoryId');
        const categoryNameField = document.getElementById('categoryName');

        editButtons.forEach(button => {
            button.addEventListener('click', () => {
                const categoryId = button.getAttribute('data-id');
                const categoryName = button.getAttribute('data-name');
                categoryIdField.value = categoryId;
                categoryNameField.value = categoryName;
            });
        });
    });
    document.addEventListener("DOMContentLoaded", function () {
        const deleteButtons = document.querySelectorAll('.delete-btn');

        deleteButtons.forEach(button => {
            button.addEventListener('click', function () {
                const categoryId = this.getAttribute('data-id');
                const form = document.getElementById('deleteForm_' + categoryId);
                if (confirm('Are you sure you want to delete this category?')) {
                    form.submit(); 
                }
            });
        });
    });
</script>