@using EConstructionApp.Domain.Enums.Employees
@model EConstructionApp.Application.DTOs.Employees.EmployeeInsertDto

@{
    ViewData["Title"] = "Add New Employee";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (TempData["SuccessMessageFromEmployee"] != null)
{
    <div class="alert alert-success alert-dismissible fade show text-center" role="alert">
        @TempData["SuccessMessageFromEmployee"]
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

@if (TempData["ErrorMessageFromEmployee"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show text-center" role="alert">
        @TempData["ErrorMessageFromEmployee"]
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-md-8 col-lg-6">
            <div class="card border-0 shadow-lg rounded-4">
                <div class="card-body p-5">
                    <form method="post" asp-action="AddEmployee" enctype="multipart/form-data">
                        @Html.AntiForgeryToken()
                        <div class="mb-4">
                            <label for="FirstName" class="form-label fs-5 fw-bold">First Name</label>
                            <input name="FirstName" class="form-control form-control-lg" id="FirstName" placeholder="Enter First Name"
                                   required minlength="2" maxlength="100" pattern="^[a-zA-Z]+$" title="First Name should only contain letters and must be between 2 to 100 characters" />
                            <span asp-validation-for="FirstName" class="text-danger"></span>
                        </div>

                        <div class="mb-4">
                            <label for="LastName" class="form-label fs-5 fw-bold">Last Name</label>
                            <input name="LastName" class="form-control form-control-lg" id="LastName" placeholder="Enter Last Name"
                                   required minlength="2" maxlength="100" pattern="^[a-zA-Z]+$" title="Last Name should only contain letters and must be between 2 to 100 characters" />
                            <span asp-validation-for="LastName" class="text-danger"></span>
                        </div>

                        <div class="mb-4">
                            <label for="Address" class="form-label fs-5 fw-bold">Address</label>
                            <input name="Address" class="form-control form-control-lg" id="Address" placeholder="Enter Address"
                                   required minlength="5" maxlength="250" />
                            <span asp-validation-for="Address" class="text-danger"></span>
                        </div>

                        <div class="mb-4">
                            <label for="PhoneNumber" class="form-label fs-5 fw-bold">Phone Number</label>
                            <input name="PhoneNumber" class="form-control form-control-lg" id="PhoneNumber"
                                   pattern="^\d{10,15}$" title="Phone number must be between 10 and 15 digits without '+' sign (e.g., 994515268342)"
                                   placeholder="Enter phone number" required minlength="10" maxlength="15" />
                            <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                        </div>

                        <div class="mb-4">
                            <label for="DateOfBirth" class="form-label fs-5 fw-bold">Date of Birth</label>
                            <input name="DateOfBirth" class="form-control form-control-lg" id="DateOfBirth" type="date" required />
                            <span asp-validation-for="DateOfBirth" class="text-danger"></span>
                        </div>

                        <div class="mb-4">
                            <label for="Salary" class="form-label fs-5 fw-bold">Salary</label>
                            <input name="Salary" class="form-control form-control-lg" id="Salary" placeholder="Enter Salary"
                                   type="number" step="0.01" required min="0" />
                            <span asp-validation-for="Salary" class="text-danger"></span>
                        </div>

                        <div class="mb-4">
                            <label for="Role" class="form-label fs-5 fw-bold">Role</label>
                            <div class ="custom-select-container">
                                <select name="Role" class="form-select form-control-lg" id="Role" required>
                                    @foreach (var role in Enum.GetValues(typeof(EmployeeRole)).Cast<EmployeeRole>())
                                    {
                                        <option value="@role" selected="@(role == EmployeeRole.Laborer ? "selected" : null)">
                                            @role
                                        </option>
                                    }
                                </select>
                            </div>
                            <span asp-validation-for="Role" class="text-danger"></span>
                        </div>

                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-gradient btn-lg shadow-sm fw-bold">Add Employee</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .btn-gradient {
        background: linear-gradient(45deg, #6c63ff, #6c757d);
        color: white;
        transition: background 0.3s ease;
    }

        .btn-gradient:hover {
            background: linear-gradient(45deg, #5755d9, #5a636e);
            transition-delay: 0.5s;
        }

    .card {
        background-color: #ffffff;
        border-radius: 15px;
        box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.1);
    }

    .form-control, .form-select {
        border-radius: 8px;
        border: 1px solid #ddd;
        transition: border-color 0.3s ease;
    }

        .form-control:focus, .form-select:focus {
            border-color: #6c63ff;
            box-shadow: 0 0 0 0.25rem rgba(108, 99, 255, 0.25);
        }

    .custom-select-container {
        position: relative;
    }

    .form-select {
        background-color: #f8f9fa;
        padding: 10px 15px;
        font-size: 1rem;
        transition: background-color 0.3s ease, border-color 0.3s ease;
    }

        .form-select:focus {
            background-color: #ffffff;
        }

        .form-select option {
            padding: 10px;
            background-color: #f8f9fa;
        }

        .form-select:hover {
            background-color: #e9ecef;
        }
</style>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        setTimeout(() => {
            let alerts = document.querySelectorAll('.alert');
            alerts.forEach(alert => {
                alert.classList.remove("show");
                alert.classList.add("fade");
                setTimeout(() => alert.remove(), 500);
            });
        }, 3000);

        let today = new Date();
        let minDate = new Date(today.setFullYear(today.getFullYear() - 18));

        let year = minDate.getFullYear();
        let month = (minDate.getMonth() + 1).toString().padStart(2, '0');
        let day = minDate.getDate().toString().padStart(2, '0');
        let maxDate = `${year}-${month}-${day}`;

        document.getElementById("DateOfBirth").setAttribute("max", maxDate);
    });
</script>
